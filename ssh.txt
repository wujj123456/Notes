ssh

/* preserve color for remote command */
https://askubuntu.com/questions/16336/how-to-get-coloured-terminal-over-ssh
ssh -t

/* disable password login for specific user */
/etc/ssh/sshd_config
```
Match User root
	PasswordAuthentication yes
```
Note: Match applies to all configs afterwards. Either add at the end, or use `Match all` afterwards

systemctl restart ssh

/* 2FA two-factor auth */
https://lwn.net/Articles/704292/

/* SOCKS Proxy */
https://www.digitalocean.com/community/tutorials/how-to-route-web-traffic-securely-without-a-vpn-using-a-socks-tunnel
ssh -D 8123 -C -N sammy@example.com
 -D: Tells SSH that we want a SOCKS tunnel on the specified port number
 -C: Compresses the data before sending it
 -N: Tells SSH that no command will be sent once the tunnel is up
 -f: Forks the process to the background


/* freeze unfreeze session */
http://unix.stackexchange.com/questions/12107/how-to-unfreeze-after-accidentally-pressing-ctrl-s-in-a-terminal
^s: freeze
^q: unfreeze

/* make ssh more secure */
https://www.linux.com/learn/tutorials/305769-advanced-ssh-security-tips-and-tricks
http://www.cyberciti.biz/tips/openssh-deny-or-restrict-access-to-users-and-groups.html
/etc/ssh/sshd_config
```
PermitRootLogin no
Protocol 2
```

/* change default port of ssh */
/etc/ssh/sshd_config 
```
# What ports, IPs and protocols we listen for
Port 50683
```
/etc/init.d/ssh restart

/* welcome message */
/etc/update-motd.d

/* tunneling */
ssh -f user@personal-server.com -L 2000:personal-server.com:25 -N

The -f tells ssh to go into the background just before it executes the command. This is followed by the username and server you are logging into. The -L 2000:personal-server.com:25 is in the form of -L local-port:host:remote-port. Finally the -N instructs OpenSSH to not execute a command on the remote system. 

/* show system info when login remotely */
apt-get install landscape-common
landscape-sysinfo
/etc/update-motd.d/

/* forwarding */
https://help.ubuntu.com/community/SSH/OpenSSH/PortForwarding
local port forwarding:
ssh -L 8080:www.ubuntuforums.org:80 <host>
ssh -L 8080:www.ubuntuforums.org:80 -L 12345:ubuntu.com:80 <host>

ssh -N -L3200:nyx-login.engin.umich.edu:22 login.engin.umich.edu

remote port forwarding:
ssh -R 5900:localhost:5900 guest@joes-pc

/* Pseudo-terminal will not be allocated because stdin is not a terminal. */
ssh -t -X login.engin.umich.edu ssh -X nyx-login

/* auto ssh permission */
.ssh: 700
authorized_keys: 640

/* specify which key to use */
ssh -i <path to key file>
